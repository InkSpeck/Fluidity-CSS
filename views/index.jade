extends layout
block content
  .container
     header
       .stage
       .header-inner
         h1 Fluidity
         h4 A Modern CSS3 & HTML5 Framework for Node.js & Stylus
         h5 Solid Typography, A Fluid and Semantic Grid, and Transparent Mixins for Pure CSS3 Syntax.
     section#about
       .is
         h1 What it is?
         p
           | Fluidity is a CSS framework made for web designers
           | who would like a CSS framework simple enough to quickly express their ideas, smart enough to help with the mundane,
           | and lean enough to stay out of the way and let them write pure CSS3 syntax.
         p
           | It's built using the awesome Stylesheet language <a href="http://learnboost.github.com/stylus/" target="_blank">Stylus</a> and all the
           | super powers it has for working with CSS. Fluidity now includes normalize.css, some base-line
           | typography, a grid system that can be used semantically or with in-line classes to create both fluid-width and fixed-width
           | designs, a collection of transparent mixins that gracefully handle browser pre-fixes for CSS3 properties.
         h1 Who's it for?
         p
           | Fluidity is for any web designer that knows how to use CSS and want to use CSS3 features now, a fluid semantic and responsive grid, and code their CSS in a clean and maintainable way using a powerful stylesheet language.
           | There is a slight learning curve for designers who have never used <a href="http://learnboost.github.com/stylus/" target="_blank">Stylus</a> before, so it is highly recommended that
           | you familiarize yourself with the Stylus Stylesheet language and the <a href="http://nodejs.org/" target="_blank">Node.js</a> enivironment.
           strong Both Node.js and Stylus are required to use Fluidity.
        .isnt
          h1 What it is not?
          .isnt-inner
            p It is not a web design in a box. If you want a great looking design it's up to you to design it.
            p It is not a giant collection of classes to memorize. In fact, if you use HTML5 and the provided semantic grid, Fluidity will not require you to add any classes to your mark up.
            p It is not a library of widgets. While some designed UI elements like pills & tabs are provided in the optional modules there is no javascript provided for their functionality it's up to you to implement them.
            p It is not a collection of javascript plugins. In fact, no javascript is included with Fluidity at all, with the exception of some Node/Npm packaging stuff in the source which is not a part Fluidity itself.
            p It is not a series of shims, fixes, or browser hacks. Fluidity is targeted directly at HTML5. The CSS3 Mixins are transparent CSS3 syntax and cross-browser prefixes are handled with a vendors variable. If you have difficult browser compatibility requirements and need support for older browsers it is up to you to provide the shims and/or monkey patches.
     section#installation
       h1 Installation
       .node
         h3
           | With Node.js for Connect (Express) Based apps
         p
           | You'll first need to install <a href="http://nodejs.org/" target="_blank">Node.js</a>.
           | After you have Node installed you'll have access to 'npm'.
         h6 Commandline
         code
           | ### Install Stylus globally
           | ### to use the 'stylus' command
           | npm install stylus -g
           | &nbsp;
           | ### In your working directory
           | npm install fluidity
         h4 Example Using Connect-Assets
         h6 Javascript
         code
           | var fluidity = require('fluidity');
         p
           | That's it! You should now be able to use @import in your .styl files.
           | You may also want to add Fluidity to your package.json file.
         .important-note
           p
             em
              strong Note:
              | There is no official support for Fluidity within connect-assets at this time. So, for the time being you can use <a href="https://github.com/InkSpeck/connect-assets" target="_blank">this</a> fork or look <a href="https://github.com/InkSpeck/connect-assets/commit/4d9db1be8f5318ec0e98901087ebb7242f577eec" target="_blank">here</a> at the diff to make the minor changes on your own.
         h4 Example usage with Stylus Connect Middleware
         h6 Javascript
         code
           | var connect = require('connect'),
           |     stylus = require('stylus'),
           |     fluidity = require('fluidity');
           | &nbsp;
           | var server = connect();
           | &nbsp;
           | function compile(str, path) {
           |   return stylus(str)
           |   .set('filename', path)
           |   .use(fluidity());
           | }
           | &nbsp;
           | server.use(stylus.middleware({
           |   src: __dirname,
           |   compile: compile
           | }));

       .standalone
         h3
           | Standalone Just Using Stylus
         p
           | You'll first need to install <a href="http://nodejs.org/" target="_blank">Node.js</a>.
           | Afterwards, you will have access to the new command npm. You can then install Stylus and Fluidity with npm.
         h6 Commandline
         code
           | ### Install Stylus globally
           | ### to use the 'stylus' command
           | npm install stylus -g
           | &nbsp;
           | ### In your working directory
           | npm install fluidity
         p
           | To begin using Fluidity within your stylus files use the @import rule provided by Stylus
         h6 Stylus
         code
           | @import "fluidity"
         p
           | You should now be able to process .styl files into CSS at the commandline with the stylus command. In order for stylus to find Fluidity you can use the "--use" switch.
         h6 Commandline
         code
           | stylus file.styl --use ../fluidity/lib/fluidity
           | &nbsp;
           | // You may also want to -w (watch) switch
           | // to watch the file for changes and
           | // recompile the CSS when your developing.
         p
           | For more information about all the commandline options for Stylus visit the <a href="http://learnboost.github.com/stylus/" target="_blank">Stylus</a> docs or type 'stylus --help'
     section#usage
       h1 Usage
       .usage-explanation
         h6 All
         p
           | To begin using Fluidity in your .styl files you simply use the @import rule provided by Stylus. That's it! You know can start using the fluidity in your Stylus code.
         h6 A Single Piece
         p
           | If you'd like to use just a single piece of Fluidity those are also be available by name. Again you can Just use @import but, you'll also have to include "fluidity/" as the path.
       .usage-code
         h6 Stylus
         code
           | @import "fluidity"
           | // For Non-Semantic Grid classes use.
           | @import "fluidity-non-semantic"
         h6 Stylus
         code
           | // Just use Normalize and the Grid
           | @import "fluidity/normalize"
           | @import "fluidity/semantic-grid"
     section#global-variables
       h3 Global Variables
       .global-variables-explanation
         p
           | There are a handful of global variables that you'll probably want to set in your .styl files before the @import statement for fluidity. These aren't required as there are some defaults, but you'll likely want to change at least some of them to suit your needs.
         h6 Variables
         ul
           li
             strong grid-width -
             | This is the width of the grid in percentage for fluid-width or in pixels for fixed-width. Default is 100%
           li
             strong grid-min-width -
             | This is the minimum width in pixels allowed by the grid. Default is 960px
           li
             strong base-font-size -
             | This is the Base font size to use. <em>Must be in ems</em> Default is 1em
           li
             strong base-line-height -
             | This is the default line-height to use. <em>Must be in ems</em> Default is 1.35em
           li
             strong base-color -
             | This is the base color used for both the text of your site and is the basis for all other colors used throughout fluidity. The default is a very dark gray #111111
           li
             strong vendors -
             | This variable is actually used by Stylus itself to determine browser prefixes to use for @keyframes among other things. Fluidity uses this variable for its own browser prefixes for its CSS3 mixins. The Default is webkit & moz.
       .global-variables-code
         p
           | Here is an example configuration that would be at the top of your .styl file making a fluid width grid down to mobile size, setting a base font-size and line-height, and allowing browser prefixes to be used for Webkit, Mozilla, and Opera.
         h6 Stylus
         code
           | grid-width = 100%
           | grid-min-width = 320px
           | base-font-size = 1em
           | base-line-height = 1.25em
           | base-color = #000000
           | vendors = webkit moz o official
           | @import \"fluidity\"
           | @import \"fluidity/forms\"
           | @import \"fluidity/elements\"
     section#typography
       h1 Typography
       .headings
         h4 Headings
         p
           | Headings are in a standard typographic hierarchy and all other copy has sane font-sizes and line-heights.
         p
           | Margins for headings are calculated based on base-font-size and base-line-height.
       .headings-example
         h6 Headings Example
         .headings-examples
           h1 Heading 1
           h2 Heading 2
           h3 Heading 3
           h4 Heading 4
           h5 Heading 5
           h6 Heading 6
       .paragraphs
         h4 Paragraphs
         p
           | Paragraphs have a readable line-height and clear margins. Other typography styles include <strong>strong</strong> & <b>bold</b>, <em>emphasis</em> & <i>italic</i> though they have been redefined in HTML5. Read about this redefining in the following <q>quoted</q> <cite>citation</cite> <q>What they're for</q> <cite>W3C,2010</cite> from <a href="http://www.w3.org/International/questions/qa-b-and-i-tags" target="_blank">Using &lt;b&gt; and &lt;i&gt; elements</a> for more.
         p
           | And much, much, more... see below.
       section
         h4 Lists, Lists, & Lists
         .lists-1
           h6 Description Lists
           dl
             dt Description Term
             dd Vestibulum id ligula porta felis euismod semper eget lacinia odio sem nec elit.
             dl
               dt Nested Descriptions
               dd Nullam quis risus eget urna mollis ornare vel eu leo.
             dd Duis mollis, est non commodo luctus, nisi erat porttitor ligula.
         .lists-2
           h6 Unordered
           ul
             li Lorem ipsum dolor sit amet
             li Facilisis in pretium nisl aliquet
             ul
               li Nulla volutpat aliquam velit
               li Phasellus iaculis neque
               ul
                 li Consectetur adipiscing elit
             li Ac tristique libero volutpat at
             li Eget porttitor lorem
         .lists-3
           h6 Ordered
           ol
             li Lorem ipsum dolor sit amet
             li Consectetur adipiscing elit
             li Integer molestie lorem at massa
             ol
               li Lorem ipsum dolor sit amet
               li Consectetur adipiscing elit
             li Integer molestie lorem at massa
             li Facilisis in pretium nisl aliquet
             li Ac tristique libero volutpat at
             li Faucibus porta lacus fringilla vel
             li Aenean sit amet erat nunc
             li Eget porttitor lorem
       section
         .blockquotes
           h4 Blockquotes
           h6 Blockquote Example
           | <blockquote>
           |  <p>Dream in a pragmatic way.</p>
           |  <cite>Aldous Huxley</cite>
           | </blockquote>
           p
             | Inside the &lt;blockquote&gt; wrap your quote in a &lt;p&gt; tag to get nice quotes and use the &lt;cite&gt; tag for the source or author.
           h6 jade
           code
             | blockquote
             |   p Dream in a pragmatic way.
             |   cite Aldous Huxley
         .code-blocks
           h4 Pre & Code Blocks
           p
             | What can be said here, you've been looking at these all throughout this page.
           p
             | Both pre and code tags produce example blocks like the one below.
           h6 A Stylus Code Example
           code
             | // Border-Radius
             | border-radius(n)
             |   -webkit-border-radius n
             |   -moz-border-radius n
             |   -o-border-radius n
             |   border-radius n
         .address-blocks
           h4 Address Blocks
           p
             | This first line in an address block is highlighted you just need to include the line-breaks where they belong as usual.
           h6 Address Example
           address
             | Inkspeck Design <br/>
             | 2012 E. Developer Ave. <br/>
             | Columbus, Ohio <br/>
     section#grid
       h1 The Grid
       h3 Grid Configuration Variables
       .grid-configuration-variables-code
         h6 Stylus
         code
           | // Fluid-layout down to mobile size
           | grid-width = 100%
           | grid-min-width = 320px
           | &nbsp;
           | // Fixed-layout
           | grid-width = 960px
           | grid-min-width = 960px
       .grid-configuration-variables-explanation
         h6 Grid Configuration Variables
         p
           | For example a grid-width of 100% and a grid-min-width of 320px would allow the layout to expand to the full width of any viewport and shrink down to the mobile friendly width of 320px, no smaller.
         p
           | A <strong>Fixed Width</strong>
           | layout can be achieved by setting both grid-width and grid-min-width to the same width in <em>px</em>.
     section#create-grid
       h3 Creating a Grid
       .create-grid-code
         h6 HTML
         code
            &lt;!-- Semantic --&gt;
            &lt;div id="your-container"&gt;
            &lt;/div&gt;
         h6 Stylus
         code
           | #your-container
           |   grid()
         h6 Stylus
         code
           | #your-container
           |   grid(50%,400px)
         h6 HTML
         code
           &lt;!-- Non-Semantic --&gt;
           &lt;div class="grid"&gt;
           &lt;/div&gt;
         h6 Stylus
         code
           | @import "fluidity-non-semantic"

       .create-grid-explanation
         h6 The Semantic Grid
         p
           | The grid in Fluidity is highly versatile and easy to understand.
           | You apply the grid() mixin to which ever element  you would like to contain the grid.
           | It can be done entirely in the Stylus/CSS and there's no need for an additional class in your HTML.
         p
           | Using just the grid() mixin as it is, will instantiate a grid with the defaults set by the grid-width and grid-min-width variables but,
           | those variables can easily be overridden when you instantiate the grid by simply including them as arguments when you call the mixin.<br/>
         p
           | The grid mixin takes two arguments the first for the grid-width and the second for grid-min-width.
         h6 The Non-Semantic Grid
         p
           | The grid can also be instantiated in a non-semantic way by using the @import "fluidity-non-semantic" in your .styl files and the ".grid" class in your HTML.
           | This will instantiate a grid with the defaults set by the grid-width and grid-min-width variables.
         .important-note
           p
             em
               | Note:<br/>
               | Overriding the grid-width and grid-min-width variables with just the HTML class
               | is not possible in a non-semantic grid. You'll have to just use these variables in your Stylus code.
     section#sections-spaces
       h2 Sections & Spaces
       .sections-spaces-explanation
         h4 A Different Kind of Grid.
         p
           | Unlike other CSS grids, Fluidity does not use the same table-like concept of rows & columns.
           | Instead of the usual print inspired multi-column style grid where the designer has to think about how wide a column is, what
           | margins exist between them, and the usual "wait... how many columns wide <em>is</em> 315px?" Fluidity focuses on the screen and the varying
           | screensizes in our world by describing things in terms of percentage of screen size or exact pixels
           | which is much easier to visualize, plan around, and ultimately understand.
         p
           | The grid in Fluidity is made up of Sections & Spaces. A <em>Section</em> is like a row in that it delineates a horizontal
           | area, but a <em>Space</em> is much different than a column in that it doesn't necessarily fill the entire vertical space of the <em>Section</em>
           | it's in. This means that a <em>Section</em> can contain <em>Spaces</em> in a floated manner as well as, in a rigid row and that means more freedom.
     section#sections
       h3 Sections
       .sections-code
         h6 HTML
         code
           | &lt;!-- Semantic --&gt;
           | &lt;header&gt;
           | &lt;/header&gt;
           | &nbsp;
           | &lt;section&gt;
           | &lt;/section&gt;
           | &nbsp;
           | &lt;footer&gt;
           | &lt;/footer&gt;
           | &nbsp;
           | &lt;fieldset&gt;
           | &lt;/fieldset&gt;
         h6 HTML
         code
           | IMPORTANT! The following will only work if you are using @import "fluidity-non-semantic"
           | &nbsp;
           | &lt;!-- Non-Semantic --&gt;
           | &lt;div class="header"&gt;
           | &lt;/div&gt;
           | &nbsp;
           | &lt;div class="section"&gt;
           | &lt;/div&gt;
           | &nbsp;
           | &lt;div class="footer"&gt;
           | &lt;/div&gt;
       .sections-explanation
         h6 Semantic Sections
         p
           | Sections are something that you shouldn't have to think too much about so long as, you are using the HTML5 &lt;header&gt;, &lt;section&gt;, and &ltfooter&gt; element to divy up your content on screen.
         p
           | Sections are automatically attached to several HTML5 elements, those elements are:
           ul
             li
               strong
                 | header
             li
               strong
                 | footer
             li
               strong
                 | section
             li
               strong
                 | fieldset
               | (not <em>strictly</em> an HTML5 element but, useful nonetheless for HTML forms)
           p
             | You may also use the <strong>section()</strong> mixin in your stylus to define a section out of any other div tag.
           h6 Non-Semantic Sections
           p
             | There is a set of classes that can be given to div elements to create sections in a Non-Semantic way if your document isn't using HTML5 elements or if you are shimming older markup.
             ul
               li
                 strong
                   | .header
               li
                 strong
                   | .footer
               li
                 strong
                   | .section
     section#spaces
       h3 Spaces
       section
         h6 Semantic Spaces
         .spaces-code-explanation
           p
             | Here we can see that we've instantiated a grid onto &lt;div id="#some-container"&gt; and we have a <em>Section</em> created by using a section element. We have also introduced two <em>Spaces</em> "#some-article" and "#some-sidebar" into the grid.
             | These two <em>Spaces</em> are created by using the grid-space() mixin. This mixin takes one argument the width in percentage or pixels if your using a fixed-layout. So what we have created is a two-column layout with an article which is 70% of
             | the grid-width wide and a sidebar on the right that is 30% of the grid-width wide. You can probably picture that in your head, right?
         .spaces-code-html
           h6 HTML
           code
             | &lt;div id="some-container"&gt;
             |   &lt;section&gt;
             |     &lt;article id="some-article"&gt;
             |       &lt;p&gt;
             |         Some Content ...
             |       &lt;/p&gt;
             |     &lt;/article&gt;
             |     &lt;aside id="some-sidebar"&gt;
             |       &lt;p&gt;
             |         Some Content ...
             |       &lt;/aside&gt;
             |     &lt;/div&gt;
             |   &lt;/section&gt;
             | &lt;/div&gt;
         .spaces-code-stylus
           h6 Stylus
           code
             | @import "fluidity"
             | #some-container
             |   grid()
             |   #some-article
             |     grid-space(70%)
             |   #some-sidebar
             |     grid-space(30%)
       section
         h6 Non-Semantic Spaces
         .spaces-code-non-semantic-explanation
           p
             | IMPORTANT! Non-Seamntic classes are only included if you are using @import "fluidity-non-semantic"
           p
             | For non-semantic spaces you can use the <em>grid-space-(n)</em> classes, where (n) is the number representing the width percentage. These classes exist for the numbers 1-100.
         .spaces-code-non-semantic-html
           h6 HTML
           code
             | &lt;div class="grid"&gt;
             |   &lt;div class="section"&gt;
             |     &lt;article class="grid-space-70"&gt;
             |       &lt;p&gt;
             |         Some Content ...
             |       &lt;/p&gt;
             |     &lt;/article&gt;
             |     &lt;aside class="grid-space-30"&gt;
             |       &lt;p&gt;
             |         Some Content ...
             |       &lt;/p&gt;
             |     &lt;/aside&gt;
             |   &lt;/div&gt;
             | &lt;/div&gt;
         .spaces-code-non-semantic-stylus
           h6 Stylus
           code
             | @import "fluidity-non-semantic"
     section#grid-examples
       h3 Some Grid Examples
       section
         .two-column-example-code-explanation
           h4 A Two Column Layout
           p
             | Here's an example of a two column layout with a header and footer. You can view this example filed in with lipsum  <a href="two-column-example" target="_blank">here</a>.
           .important-note
             p
               em
                strong Note:
                | For brevity in the following example we're using the jade markup language instead of HTML. You can get more info about jade <a href="http://www.jade-lang.com" target="_blank">here</a>.
         .two-column-example-code-html
           h6 Jade
           code
             | !!! 5
             | html
             |   head
             |     .... include your css!
             |   body
             |     #examplepage
             |       header
             |         h1 Content...
             |       section#content
             |         sidebar
             |           p Content...
             |         article
             |           p Content...
             |       footer
             |         p Content...
         .two-column-example-code-stylus
           h6 Stylus
           code
              |  @import "fluidity"
              |  &nbsp;
              |  #examplepage
              |    grid(80%,960px)
              |  &nbsp;
              |  header
              |    background-color darkgray2
              |    color white
              |  &nbsp;
              |  #content
              |    sidebar
              |      grid-space(30%)
              |    article
              |      grid-space(70%)
              |  &nbsp;
              |  footer
              |    background-color lightgray2
              |    text-align center
       section
         .three-column-example-code-explanation
           h4 A Three Column Layout
           p
             | <strong>New!</strong> By request this example has been updated to demonstrate a responsive layout down to mobile sizes, as well.
           p
             | Here's an example of a three column layout with a header and footer. You can view this example filed in with lipsum <a href="three-column-example" target="_blank">here</a>.
           .important-note
             p
               em
                strong Note:
                | For brevity in the following example we're using the jade markup language instead of HTML.
         .three-column-example-code-html
           h6 Jade
           code
             | !!! 5
             | html
             |   head
             |     .... include your css!
             |   body
             |     #examplepage
             |       header
             |         h1 Content...
             |       section
             |         sidebar#left-menu
             |           p Content...
             |         #content
             |           p Content...
             |         sidebar#right-menu
             |       footer
             |         h6 Content...
         .three-column-example-code-stylus
           h6 Stylus
           code
             |  @import "fluidity"
             |  &nbsp;
             |  #examplepage
             |    grid(90%,800px)
             |  header
             |    background-color darkgray2
             |    color white
             |  #left-menu
             |    grid-space(25%)
             |  #content
             |    grid-space(50%)
             |  #right-menu
             |    grid-space(25%)
             |  footer
             |    background-color lightgray2
             |    text-align center
             |  &nbsp;
             |  // Below is the responsive bit
             |  &nbsp;
             |  @media screen and (max-width: 800px)
             |    #examplepage
             |      grid(90%,475px)
             |    #left-menu
             |      grid-space(45%)
             |    #content
             |      grid-space(55%)
             |    #right-menu
             |      grid-space(100%)
             |  &nbsp;
             |  @media screen and (max-width: 500px)
             |    #examplepage
             |      grid(90%,320px)
             |    header
             |      font-size 0.8em
             |    #left-menu
             |      grid-space(100%)
             |    #content
             |      grid-space(100%)
             |    #right-menu
             |      grid-space(100%)
       section
         .three-column-fixed-example-code-explanation
           h4 A Three Column Fixed-Width Layout
           p
             | Here's an example of a three column fixed-width layout with a header and footer. <strong>In order to make our three-column-layout fixed-width, you'll notice all we had to do was change the grid-width and grid-min-width variables to the same number in pixels by passing them as arguments to the grid() mixin.</strong> You can view this example filed in with lipsum  <a href="three-column-fixed-example" target="_blank">here</a>.
           .important-note
             p
               em
                strong Note:
                | For brevity in the following example we're using the jade markup language instead of HTML.
         .three-column-fixed-example-code-html
           h6 Jade
           code
             | !!! 5
             | html
             |   head
             |     .... include your css!
             |   body
             |     #examplepage
             |       header
             |         h1 Content...
             |       section
             |         sidebar#left-menu
             |           p Content...
             |         #content
             |           p Content...
             |         sidebar#right-menu
             |       footer
             |         h6 Content...
         .three-column-fixed-example-code-stylus
           h6 Stylus
           code
             |  @import "fluidity"
             |  &nbsp;
             |  #examplepage
             |    grid(960px,960px)
             |  &nbsp;
             |  header
             |    background-color darkgray2
             |    color white
             |  &nbsp;
             |  #left-menu
             |    grid-space(25%)
             |  #content
             |    grid-space(50%)
             |  #right-menu
             |    grid-space(25%)
             |  &nbsp;
             |  footer
             |    background-color lightgray2
             |    text-align center
     section#css3
       h1 CSS3
       .css3-explanation
         h4 Transparent Mixins
         p
           | Fluidity has transparent mixins for all the latest CSS3 properties. This means that you can just use the official CSS3 syntax in the purest way and Fluidity will include all of the prefixed versions for you. These mixins provide all of the cross browser prefixes for you based on the "vendors" variable. By default fluidity includes prefixes for webkit (webkit) and mozilla (moz). You can set this variable to include opera (o), Internet Explorer (ms), or you could set it to not use any prefixes and only output true CSS3 with the just the "official" keyword. When setting this variable be sure to include official last in the order to ensure it gets included and not overridden.
         p
           | Basically, a transparent mixin lets you right your code. Once. The right way. <br/>
           | Here's An example of a transparent mixin. Given a vendors variable of "webkit moz o ms official".
         h6 Stylus
         code
           | #item
           |   border-radius 10px
       .css3-mixins
         h5 The following CSS3 Properties have transparent mixins:
         .mixin-list
           ul
             li appearance
             li opacity
             li border-radius
             li box-shadow
             li box-sizing
             li border-image
             li background-size
             li background-origin
             li background-clip
             li transform
             li backface-visibilty
             li perspective
             li animation
             li animation-name
             li animation-duration
             li animation-timing-function
             li animation-delay
             li animation-iteration-count
             li animation-direction
             li animation-play-state
             li animation-fill-mode
             li transition
             li columns
             li column-count
             li column-gap
             li column-rule
             li filter
         h6 Fluidity Will Export the folowing CSS.
         code
           | #item {
           |   -webkit-border-radius: 10px;
           |   -moz-border-radius: 10px;
           |   -o-border-radius: 10px;
           |   -ms-border-radius: 10px;
           |   border-radius: 10px;
           | }

     section#gradients
       h4 CSS3 Gradients
       section#linear
         .linear-gradient-explanation
           h5 Linear Gradients
           p The linear gradient function uses the latest and recently finalized official <a href="http://www.w3.org/TR/css3-images/#linear-gradients" target="_blank">CSS3 Syntax</a> and generates the currently implemented but deprecated syntax in the browsers that support the feature this includes the even older syntax of "-webkit-gradient(linear,...)" for legacy webkit browsers.
         .linear-gradient-example-code
           h6 Stylus
           code
             | #sample-1
             |   background-image linear-gradient(65deg, #fff, #353535)
             | #sample-2
             |   background-image linear-gradient(
             |     to bottom left, #dadada 40%, #353535 70%, #fafafa 100%
             |   )
         .linear-gradient-sample
           #sample-1.gradient-sample
             h6 Sample 1
           #sample-2.gradient-sample
             h6 Sample 2
       section#radial
         .radial-gradient-explanation
           h5 Radial Gradients
           p The radial gradient function uses the latest and recently finalized official <a href="http://www.w3.org/TR/css3-images/#radial-gradients" target="_blank">CSS3 Syntax</a> and generates the currently implemented but deprecated syntax in the browsers that support the feature.
           .important-note
             p Sadly, due to the vast differences in the syntaxes this does not include the legacy webkit syntax of "-webkit-gradient(radial,...)"
          .radial-gradient-example-code
            h6 Stylus
            code
              | #sample-1
              |   background radial-gradient(at top right, #fff, #353535)
              | #sample-2
              |   background radial-gradient(
              |     ellipse farthest-corner at 0% 100%, #fff 10%, #353535 50%, #dadada 70%
              |   )
              | #sample-3
              |   background radial-gradient(circle closest-side at 40px 30px, #fff, #353535)
         .radial-gradient-sample
           #sample-1.gradient-sample
             h6 Sample 1
           #sample-2.gradient-sample
             h6 Sample 2
           #sample-3.gradient-sample
             h6 Sample 3
     footer
       #copyright
         p Created by | <a href="http://www.inkspeck.com" target="_blank" >InkSpeck Design</a>. Licensed under the MIT license.
